version: 2.1

executors:
  fed-executor:
    docker:
      - image: openjdk:8-jdk
    environment:
      _JAVA_OPTIONS: "-Xmx3G -Xms2G"
    working_directory: /app
    resource_class: medium+

jobs:
  clone_rskj_repo:
    executor: fed-executor
    steps:
      - checkout
      - run:
          name: Setup
          command: apt update -y && apt install -y gnupg2
      
      - run:
          name: Verify files
          command: |
            curl -sSL https://secchannel.rsk.co/release.asc | gpg2 --import -
            gpg2 --verify SHA256SUMS.asc && sha256sum --check SHA256SUMS.asc
      - run:
          name: Clone rskj repo
          command: |
            git clone https://github.com/rsksmart/rskj.git
      - run:
          name: Checkout rskj repo
          command: |
            cd rskj
            BRANCH_GET=`git ls-remote --heads origin ${CIRCLE_BRANCH}`
            if test -z "$BRANCH_GET"; then
              echo "Building master branch from rskj repo"
            else
              echo "Building ${CIRCLE_BRANCH} branch from rskj"
              git checkout ${CIRCLE_BRANCH}
            fi
      - persist_to_workspace:
                root: .
                paths:
                  - .

  build_federator_node:
    executor: fed-executor
    steps:
      - attach_workspace:
          at: /app
        
      - run:
          name: Build federator-node jar
          command: |
            echo "includeBuild('./rskj') {"  > DONT-COMMIT-settings.gradle
            echo "  dependencySubstitution {" >> DONT-COMMIT-settings.gradle
            echo "      all { DependencySubstitution dependency ->" >> DONT-COMMIT-settings.gradle
            echo "          if (dependency.requested instanceof ModuleComponentSelector" >> DONT-COMMIT-settings.gradle
            echo "                  && dependency.requested.group == 'co.rsk'" >> DONT-COMMIT-settings.gradle
            echo "                  && dependency.requested.module == 'rskj-core'" >> DONT-COMMIT-settings.gradle
            echo "                  && dependency.requested.version.endsWith('SNAPSHOT')) {" >> DONT-COMMIT-settings.gradle
            echo "              def targetProject = project(\":\${dependency.requested.module}\")" >> DONT-COMMIT-settings.gradle
            echo "              if (targetProject != null) {" >> DONT-COMMIT-settings.gradle
            echo "                  println('---- USING LOCAL ' + dependency.requested.displayName +' PROJECT ----')" >> DONT-COMMIT-settings.gradle
            echo "                  dependency.useTarget targetProject" >> DONT-COMMIT-settings.gradle
            echo "              }" >> DONT-COMMIT-settings.gradle
            echo "          }" >> DONT-COMMIT-settings.gradle
            echo "      }" >> DONT-COMMIT-settings.gradle
            echo "  }" >> DONT-COMMIT-settings.gradle
            echo "}" >> DONT-COMMIT-settings.gradle
            rm -rfv .gradle
            ./configure.sh
            ./gradlew --no-daemon dependencies
            ./gradlew --no-daemon --stacktrace clean build -x test
      - persist_to_workspace:
          root: .
          paths:
            - .

  federator-tests:
      executor: fed-executor
      steps:
        - attach_workspace:
            at: /app
        - run:
            name: Perform federator tests
            command: ./gradlew --no-daemon --stacktrace     test
        - run:
            name: Save test results
            command: |
              mkdir -p junit/
              find build/test-results -type f -name "*.xml" \
                -exec cp {} junit/ \;
            when: always
        - store_test_results:
            path: junit

        - store_artifacts:
            path: junit
            
        - persist_to_workspace:
            root: .
            paths:
              - .
              
workflows:
  version: 2
  build-and-test:
    jobs:
      - clone_rskj_repo

      - build_federator_node:
          requires:
            - clone_rskj_repo

      - federator-tests:
          requires:
            - build_federator_node
